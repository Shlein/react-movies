{"version":3,"sources":["layout/Header.jsx","layout/Footer.jsx","components/Movie.jsx","components/Movies.jsx","components/Preloader.jsx","components/Search.jsx","layout/Main.jsx","App.js","index.js"],"names":["Header","className","href","id","Footer","Date","getFullYear","Movie","props","title","Title","year","Year","imdbID","type","Type","poster","Poster","src","Movies","movies","length","map","movie","Preloader","Search","searchMovies","useState","defaultTitle","search","setSearch","setType","handleFilter","e","target","dataset","placeholder","value","onChange","onKeyDown","key","onClick","data-type","name","checked","API_KEY","process","Main","setMovies","isLoading","setIsLoading","useEffect","fetch","then","response","json","data","catch","err","console","log","str","App","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27d112a2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n\t  <nav className=\"teal lighten-1\">\r\n\t\t  <div className=\"nav-wrapper\">\r\n\t\t\t  <a href=\"#!\" className=\"brand-logo\">React movies</a>\r\n\t\t\t  <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n\t\t\t\t  <li><a href=\"!#\">Repo</a></li>\r\n\t\t\t  </ul>\r\n\t\t  </div>\r\n\t  </nav>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"page-footer teal lighten-3\">\r\n      <div className=\"footer-copyright\">\r\n        <div className=\"container\">\r\n          Â© {new Date().getFullYear()} Copyright Text\r\n          <a className=\"grey-text text-lighten-4 right\" href=\"#!\">Repo</a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nconst Movie = (props) => {\r\n\tconst {\r\n\t\tTitle: title,\r\n\t\tYear: year,\r\n\t\timdbID: id,\r\n\t\tType: type,\r\n\t\tPoster: poster\r\n\t} = props\r\n\r\n  return (\r\n\t  <div id={id} className=\"card movie\">\r\n\t\t  <div className=\"card-image waves-effect waves-block waves-light\">\r\n\t\t\t  {\r\n\t\t\t  \tposter === \"N/A\" ?\r\n\t\t\t\t\t  <img className=\"activator\" src={`https://via.placeholder.com/300x440?text=${title}`}/>\r\n\t\t\t\t\t  :\r\n\t\t\t\t\t  <img className=\"activator\" src={poster} />\r\n\t\t\t  }\r\n\t\t  </div>\r\n\t\t  <div className=\"card-content\">\r\n\t\t\t  <span className=\"card-title activator grey-text text-darken-4\">{title}</span>\r\n\t\t\t  <p>{year} <span className=\"right\">{type}</span></p>\r\n\t\t  </div>\r\n\t  </div>\r\n  )\r\n}\r\n\r\nexport default Movie","import React from 'react'\r\nimport Movie from \"./Movie\";\r\n\r\nconst Movies = (props) => {\r\n\tconst {movies = []} = props\r\n\treturn (\r\n\t\t<div className=\"movies\">\r\n\t\t\t{movies.length ? movies.map(movie => <Movie key={movie.imdbID} {...movie}/>)\r\n\t\t\t\t: <h4>Nothing found</h4>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Movies","import React from 'react'\r\n\r\nconst Preloader = () => {\r\n  return (\r\n\r\n\t  <div className=\"preloader-wrapper big active preloader\">\r\n\t\t  <div className=\"spinner-layer spinner-blue\">\r\n\t\t\t  <div className=\"circle-clipper left\">\r\n\t\t\t\t  <div className=\"circle\"></div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"gap-patch\">\r\n\t\t\t\t  <div className=\"circle\"></div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"circle-clipper right\">\r\n\t\t\t\t  <div className=\"circle\"></div>\r\n\t\t\t  </div>\r\n\t\t  </div>\r\n\r\n\t\t  <div className=\"spinner-layer spinner-red\">\r\n\t\t\t  <div className=\"circle-clipper left\">\r\n\t\t\t\t  <div className=\"circle\"></div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"gap-patch\">\r\n\t\t\t\t  <div className=\"circle\"></div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"circle-clipper right\">\r\n\t\t\t\t  <div className=\"circle\"></div>\r\n\t\t\t  </div>\r\n\t\t  </div>\r\n\r\n\t\t  <div className=\"spinner-layer spinner-yellow\">\r\n\t\t\t  <div className=\"circle-clipper left\">\r\n\t\t\t\t  <div className=\"circle\"></div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"gap-patch\">\r\n\t\t\t\t  <div className=\"circle\"></div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"circle-clipper right\">\r\n\t\t\t\t  <div className=\"circle\"></div>\r\n\t\t\t  </div>\r\n\t\t  </div>\r\n\r\n\t\t  <div className=\"spinner-layer spinner-green\">\r\n\t\t\t  <div className=\"circle-clipper left\">\r\n\t\t\t\t  <div className=\"circle\"></div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"gap-patch\">\r\n\t\t\t\t  <div className=\"circle\"></div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"circle-clipper right\">\r\n\t\t\t\t  <div className=\"circle\"></div>\r\n\t\t\t  </div>\r\n\t\t  </div>\r\n\t  </div>\r\n  )\r\n}\r\n\r\nexport default Preloader","import {React, useState} from 'react'\r\n\r\nconst Search = (props) => {\r\n\r\n\tconst {searchMovies} = props\r\n\r\n\tconst [search, setSearch] = useState(props.defaultTitle)\r\n\tconst [type, setType] = useState('all')\r\n\r\n\tconst handleKey = (e) => {\r\n\t\tif (e.key === 'Enter') {\r\n\t\t\tsearchMovies(search, type)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleFilter = (e) => {\r\n\t\tsetType(e.target.dataset.type)\r\n\t\tsearchMovies(search, e.target.dataset.type)\r\n\t}\r\n\r\n  return (\r\n\t  <div className=\"row\">\r\n\t\t  <div className=\"input-field\">\r\n\t\t\t  <input\r\n\t\t\t\t  className=\"validate\"\r\n\t\t\t\t  placeholder='Search'\r\n\t\t\t\t  type=\"search\"\r\n\t\t\t\t  value={search}\r\n\t\t\t\t  onChange={(e) => setSearch(e.target.value)}\r\n\t\t\t\t  onKeyDown={handleKey}\r\n\t\t\t  />\r\n\t\t\t  <button className=\"btn search-btn\" onClick={() => searchMovies(search, type)}>Search</button>\r\n\t\t\t  <form>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<input data-type=\"all\"\r\n\t\t\t\t\t\t\t       className=\"with-gap\"\r\n\t\t\t\t\t\t\t       name=\"group3\"\r\n\t\t\t\t\t\t\t       type=\"radio\"\r\n\t\t\t\t\t\t\t       onChange={handleFilter}\r\n\t\t\t\t\t\t\t       checked={type === 'all'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span>All</span>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<input data-type=\"movie\"\r\n\t\t\t\t\t\t\t       className=\"with-gap\"\r\n\t\t\t\t\t\t\t       name=\"group3\" type=\"radio\"\r\n\t\t\t\t\t\t\t       onChange={handleFilter}\r\n\t\t\t\t\t\t\t       checked={type === \"movie\"}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span>Movies only</span>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<input data-type=\"series\"\r\n\t\t\t\t\t\t\t       className=\"with-gap\"\r\n\t\t\t\t\t\t\t       name=\"group3\" type=\"radio\"\r\n\t\t\t\t\t\t\t       onChange={handleFilter}\r\n\t\t\t\t\t\t\t       checked={type === 'series'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span>Series only</span>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t  </form>\r\n\t\t  </div>\r\n\t  </div>\r\n  )\r\n}\r\n\r\nexport default Search","import React, {useState, useEffect} from 'react'\r\nimport Movies from '../components/Movies'\r\nimport Preloader from \"../components/Preloader\";\r\nimport Search from \"../components/Search\";\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY\r\n\r\nconst Main = () => {\r\n\r\n\tconst [movies, setMovies] = useState('')\r\n\tconst [isLoading, setIsLoading] = useState(true)\r\n\tconst defaultTitle = 'matrix'\r\n\r\n\tconst searchMovies = (str, type = 'all') => {\r\n\t\tsetIsLoading(true)\r\n\t\tfetch(`https://www.omdbapi.com/?apikey=${API_KEY}&s=${str}${type !== 'all' ? `&type=${type}` : ''}`)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data =>  {\r\n\t\t\t\tsetMovies(data.Search)\r\n\t\t\t\tsetIsLoading(false)\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t\tsetIsLoading(false)\r\n\t\t\t})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(`https://www.omdbapi.com/?apikey=${API_KEY}&s=${defaultTitle}`)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data =>  {\r\n\t\t\t\tsetMovies(data.Search)\r\n\t\t\t\tsetIsLoading(false)\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t\tsetIsLoading(false)\r\n\t\t\t})\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<main className=\"container content\">\r\n\t\t\t<Search searchMovies={searchMovies} defaultTitle={defaultTitle}/>\r\n\t\t\t{\r\n\t\t\t\t!isLoading ? <Movies movies={movies}/> : <Preloader/>\r\n\t\t\t}\r\n\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default Main","import Header from './layout/Header'\nimport Footer from './layout/Footer'\nimport Main from './layout/Main'\nimport React from \"react\";\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <Main />\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}